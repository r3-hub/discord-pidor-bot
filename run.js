
require('dotenv').config();
const { Client, GatewayIntentBits, REST, Routes, SlashCommandBuilder, Events } = require('discord.js');
const sqlite3 = require('sqlite3');
const fs = require('fs');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
const db = new sqlite3.Database('database.db3');
db.run(`CREATE TABLE IF NOT EXISTS participants (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    discord_user_id TEXT,
    discord_user_name TEXT,
    discord_guild_id TEXT,
    score INTEGER DEFAULT 0
)`);
db.run(`CREATE TABLE IF NOT EXISTS games (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    discord_guild_id TEXT,
    datetime INTEGER,
    winner_participant_id INTEGER
)`);
db.run(`CREATE TABLE IF NOT EXISTS settings (
    discord_guild_id TEXT PRIMARY KEY,
    channel_id TEXT
)`);

// –ö–æ–º–∞–Ω–¥—ã
const commands = [
    new SlashCommandBuilder().setName('–ø–∏–¥–æ—Ä–¥–Ω—è').setDescription('–í—Å—Ç—É–ø–∏—Ç—å –≤ –∏–≥—Ä—É'),
    new SlashCommandBuilder().setName('–∫—Ç–æ–ø–∏–¥–æ—Ä').setDescription('–í—ã–±—Ä–∞—Ç—å –ø–∏–¥–æ—Ä–∞ –¥–Ω—è'),
    new SlashCommandBuilder().setName('—Ç–æ–ø–ø–∏–¥–æ—Ä–æ–≤').setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥'),
    new SlashCommandBuilder().setName('–ø–∏–¥–æ—Ä–≥–æ–¥–∞').setDescription('–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–¥–æ—Ä–∞ –≥–æ–¥–∞'),
    new SlashCommandBuilder().setName('–ø–∏–¥–æ—Ä–º–µ—Å—è—Ü–∞').setDescription('–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–¥–æ—Ä–∞ –º–µ—Å—è—Ü–∞'),
    new SlashCommandBuilder()
        .setName('–ø–∏–¥–æ—Ä–∞–ª–µ—Ä—Ç—Å')
        .setDescription('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∞–≤—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–∏–¥–æ—Ä–∞ –º–µ—Å—è—Ü–∞')
        .addChannelOption(opt =>
            opt.setName('–∫–∞–Ω–∞–ª')
                .setDescription('–ö–∞–Ω–∞–ª, –∫—É–¥–∞ –ø–∏—Å–∞—Ç—å –ø–∏–¥–æ—Ä–∞ –º–µ—Å—è—Ü–∞')
                .setRequired(true)
        )
].map(cmd => cmd.toJSON());

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Å—Ç–∞—Ä—ã—Ö –∫–æ–º–∞–Ω–¥
const rest = new REST({ version: '10' }).setToken(process.env.TOKEN);
(async () => {
    try {
        console.log('üì¶ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã...');
        await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: [] });
        console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω—ã');

        console.log('üì¶ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã...');
        await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: commands });
        console.log('‚úÖ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    } catch (err) {
        console.error(err);
    }
})();

// –ö–ª–∏–µ–Ω—Ç
const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers] });

client.once('ready', () => {
    console.log(`ü§ñ –í–æ—à—ë–ª –∫–∞–∫ ${client.user.tag}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
client.on(Events.InteractionCreate, async interaction => {
    if (!interaction.isChatInputCommand()) return;
    const guildId = interaction.guild.id;
    const userId = interaction.user.id;
    const username = interaction.user.username;
    const nickname = interaction.member?.nickname || username;

    if (interaction.commandName === '–ø–∏–¥–æ—Ä–∞–ª–µ—Ä—Ç—Å') {
        const channel = interaction.options.getChannel('–∫–∞–Ω–∞–ª');
        db.run("INSERT OR REPLACE INTO settings (discord_guild_id, channel_id) VALUES (?, ?)", [guildId, channel.id]);
        interaction.reply(`‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –∞–Ω–æ–Ω—Å–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${channel}`);
    }
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ø–∏–¥–æ—Ä–¥–Ω—è, –∫—Ç–æ–ø–∏–¥–æ—Ä, –ø–∏–¥–æ—Ä–≥–æ–¥–∞ –∏ —Ç.–ø.) –æ–ø—É—â–µ–Ω—ã –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
});

client.login(process.env.TOKEN);